@model BetaClientesVM.PML.PMLEquiposVM
@{
    ViewBag.Title = "PML Equipos Index";
    ViewBag.NombreModulo = "PML";
    ViewBag.TituloPagina = "Equipos Index";

    if(ViewBag.MensajeError!=null)
    {
    <script>
        $(document).ready(function () {
            NotificacionBasica('@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.TituloPagina))', '@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.MensajeError))', "warning");
        });
    </script>
    }
}



<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 mt-1 mb-4 text-right">
                        <button class="btn btn-sm btn-primary rounded-pill" id="btnAgregarEquipo"><i class="fas fa-plus-circle fa-1x"></i> Agregar</button>
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" id="divListaEquipos">
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>





<!-- Basic modal -->
<div id="ModalEquipos" class="modal fade" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header headerModal">
                <h5 class="modal-title text-bold"><img src="~/Images/gotas_blancas.svg" alt="Icono" class="mr-2" style="height: 27px; width: 27px;"> Información del Equipo</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body border-bottom border-top" style="border-color: #ccc;">
                <div class="row">
                        @Html.HiddenFor(model => model.Accion)
                        @Html.HiddenFor(model => model.Equi_IdEquipo)

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2">
                        @Html.LabelFor(model => model.Equi_Nombre, htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.EditorFor(model => model.Equi_Nombre, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Equi_Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2">
                        @Html.LabelFor(model => model.Equi_TipoEquipo, htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(model => model.Equi_TipoEquipo, ViewBag.cmbTipoEquipo as IEnumerable<SelectListItem>, "Selecciona una opción", new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Equi_Nombre, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2">
                        @Html.LabelFor(model => model.Equi_POES, htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.EditorFor(model => model.Equi_POES, new { htmlAttributes = new { @class = "form-control", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Equi_POES, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2">
                        @Html.LabelFor(model => model.Equi_IdArea, htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(model => model.Equi_IdArea, ViewBag.cmbArea as IEnumerable<SelectListItem>, "Selecciona una opción", new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Equi_IdArea, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-xs-12 col-sm-12 col-md-6 col-lg-6 col-xl-6 mt-2">
                        @Html.LabelFor(model => model.Equi_IdTurno, htmlAttributes: new { @class = "font-weight-bold" })
                        @Html.DropDownListFor(model => model.Equi_IdTurno, ViewBag.cmbTurno as IEnumerable<SelectListItem>, "Selecciona una opción", new { @class = "form-control " })
                        @Html.ValidationMessageFor(model => model.Equi_IdTurno, "", new { @class = "text-danger" })
                    </div>


                </div>
            </div>

            <div class="modal-footer mt-2" >
                <button type="button" class="btn btn-link rounded-pill bg-light" data-dismiss="modal"><i class="fas fa-times"></i> Cerrar</button>
                <button type="button" class="btn btn-primary rounded-pill " id="btnGuardarDatosEquipo"><i class="fas fa-save fa-1x"></i> Guardar</button>
            </div>
        </div>
    </div>
</div>
<!-- Basic modal -->






<script>
    function ConsultarEquipos()
    {
        $.ajax({
            type       : "get",
            url        : '@Url.Action("ConsultarEquiposActivos", "PML")',
            contentType: "application/json; charset=utf-8",
        }).done(function (result) {

            $("#divListaEquipos").html(result);

            CargarTabla();


        }).fail(function (error) {

            NotificacionBasica('@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.TituloPagina))', "Ocurrió un error al consultar la lista de los Equipos.", "error");

        });
    }


    ConsultarEquipos();


    $("#btnAgregarEquipo").on("click", function () {
        const accion = 2;

        //Para limpiar los datos a los elmentos del formulario
        var datosModal = JSON.stringify({
            Equi_IdEquipo: 0,
            Equi_Nombre: "",
            Equi_TipoEquipo: "",
            Equi_POES: "",
            Equi_IdArea: "",
            Equi_IdTurno: ""
        });

        DatosModalEquipo(datosModal, accion);
    });


    function DatosModalEquipo(datosModal, accion) {
        row = JSON.parse(datosModal);
        $("#Accion").val(accion);
        $("#Equi_IdEquipo").val(row.Equi_IdEquipo);
        $("#Equi_Nombre").val(row.Equi_Nombre);
        $("#Equi_TipoEquipo").val(row.Equi_TipoEquipo);
        $("#Equi_POES").val(row.Equi_POES);
        $("#Equi_IdArea").val(row.Equi_IdArea);
        $("#Equi_IdTurno").val(row.Equi_IdTurno);

        $("#ModalEquipos").modal("show");

    }


    $("#btnGuardarDatosEquipo").on("click", function () {
        const mensajeValidacion = ValidacionCampos(ObtenerDatos());
        if (mensajeValidacion === "" ) {
            AJAXGuardarDatosEquipo(ObtenerDatos());
        } else {
            NotificacionBasica('@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.TituloPagina))', mensajeValidacion, "warning");
        }
    });


    function ValidacionCampos(objEquiposVM) {
        let mensaje = "";

        if (objEquiposVM.Equi_Nombre == null || objEquiposVM.Equi_Nombre == "")
        {
            mensaje += `${$('label[for="Equi_Nombre"]').text()} es requerido. <br>`;
        }

        if (objEquiposVM.Equi_TipoEquipo == null || objEquiposVM.Equi_TipoEquipo == "")
        {
            mensaje += `${$('label[for="Equi_TipoEquipo"]').text()} es requerido. <br>`;
        }

        if (objEquiposVM.Equi_POES == null || objEquiposVM.Equi_POES == "")
        {
            mensaje += `${$('label[for="Equi_POES"]').text()} es requerido. <br>`;
        }

        if (objEquiposVM.Equi_IdArea == null || objEquiposVM.Equi_IdArea == "") {
            mensaje += `${$('label[for="Equi_IdArea"]').text()} es requerido. <br>`;
        }

        if (objEquiposVM.Equi_IdTurno == null || objEquiposVM.Equi_IdTurno == "") {
            mensaje += `${$('label[for="Equi_IdTurno"]').text()} es requerido. <br>`;
        }

        return mensaje;
    }



    function AJAXGuardarDatosEquipo(objEquiposVM) {
        $.ajax({
            type       :    'post',
            url        :    '@Url.Action("GestionarEquipos", "PML")',
            data       :    JSON.stringify({ objEquiposVM: objEquiposVM }),
            contentType:    'application/json; charset=utf-8',
        }).done(function (result) {
            ConsultarEquipos();
            $("#ModalEquipos").modal("hide");

            //SI OCURRE UN ERROR
            if (result.resultado == 0) {
                NotificationBasica('@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.TituloPagina))', result.mensaje, "error");
            }
        }).fail(function (error) {
            NotificacionBasica('@Html.Raw(HttpUtility.JavaScriptStringEncode(ViewBag.TituloPagina))', "No se pudo completar la operación. Por favor, inténtalo de nuevo más tarde.", "error");
        });
    }


    function ObtenerDatos() {
        let objEquiposVM = {
            Accion:             $("#Accion").val(),
            Equi_IdEquipo:      $("#Equi_IdEquipo").val(),
            Equi_Nombre:        $("#Equi_Nombre").val(),
            Equi_TipoEquipo:    $("#Equi_TipoEquipo").val(),
            Equi_POES:          $("#Equi_POES").val(),
            Equi_IdArea:        $("#Equi_IdArea").val(),
            Equi_IdTurno:       $("#Equi_IdTurno").val()
        };

        return objEquiposVM;
    }


    function MensajeEliminacion(datosEquipo) {
        row                 =   JSON.parse(datosEquipo);

        swalInit.fire({
            title: '@ViewBag.TituloPagina',
            html: "<br>Se eliminara <b>" + row.Equi_Nombre + "</b><br> ¿Deseas Continuar?",
            icon: 'question',
            showCancelButton: true,
            confirmButtonText: '<i class="fas fa-check"></i> Si, estoy de acuerdo!',
            cancelButtonText: '<i class="fas fa-times"></i> No, cancelar!',
            buttonsStyling: false,
            customClass: {
                confirmButton: 'btn btn-primary rounded-pill',
                cancelButton: 'btn btn-danger rounded-pill'
            }
        }).then(function (result) {
            if (result.value) {
                let objEquiposVM = {
                    Accion:         4,
                    Equi_IdEquipo:  row.Equi_IdEquipo
                };
                AJAXGuardarDatosEquipo(objEquiposVM)
            }
        });

    }



</script>